generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int          @id @default(autoincrement())
  name       String
  email      String       @unique @db.VarChar(255)
  password   String       @db.VarChar(255)
  createdAt DateTime     @default(now())
  updatedAt DateTime     @default(now())
  Session    Session[]
  Game       Game[]
  Rating     Rating[]
  Comment    Comment[]
  Like       Like[]
}

model Session {
  id         Int          @id @default(autoincrement())
  userId    Int
  User       User        @relation(fields: [userId], references: [id])
  token      String
  active     Boolean
  createdAt DateTime     @default(now())
  updatedAt DateTime     @default(now())
}

model Game {
  id           Int          @id @default(autoincrement())
  name         String       @unique
  released_at  DateTime
  subtitle     String
  inserted_by   Int
  User         User         @relation(fields: [inserted_by], references: [id])
  description  String       @db.Text
  main_image   String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @default(now())
  Rating       Rating[]
  Comment      Comment[]
  GameCategory GameCategory[]
  Image        Image[]
}

model Rating {
  id         Int          @id @default(autoincrement())
  userId    Int
  User       User         @relation(fields: [userId], references: [id])
  gameId    Int
  Game       Game         @relation(fields: [gameId], references: [id])
  rating     Int
  createdAt DateTime     @default(now())
  updatedAt DateTime     @default(now())
}

model Comment {
  id         Int          @id @default(autoincrement())
  userId    Int
  User       User         @relation(fields: [userId], references: [id])
  gameId    Int
  Game       Game         @relation(fields: [gameId], references: [id])
  comment    String
  createdAt DateTime     @default(now())
  updatedAt DateTime     @default(now())
  Like       Like[]
}

model Like {
  id         Int          @id @default(autoincrement())
  userId    Int
  User       User         @relation(fields: [userId], references: [id])
  commentId Int
  Comment    Comment      @relation(fields: [commentId], references: [id])
  createdAt DateTime     @default(now())
  updatedAt DateTime     @default(now())
}

model Category {
  id           Int          @id @default(autoincrement())
  name         String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @default(now())
  GameCategory GameCategory[]
}

model GameCategory {
  id          Int          @id @default(autoincrement())
  gameId     Int
  Game        Game         @relation(fields: [gameId], references: [id])
  categoryId Int
  Category    Category      @relation(fields: [categoryId], references: [id])
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @default(now())
}

model Image {
  id         Int          @id @default(autoincrement())
  gameId    Int
  Game       Game        @relation(fields: [gameId], references: [id])
  url        String
  createdAt DateTime     @default(now())
  updatedAt DateTime     @default(now())
}